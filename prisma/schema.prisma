
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
}


model User {
  id      String      @id 
  email   String   @unique
  username    String
  displayName String?
  img    String?
  coverImg String?
  bio   String?
  location String?
  job String?
  website String?


  posts   Post[]
  likes   Like[]
  savedPosts SavedPost[]
  followers Follow[] @relation("Followers")
  following Follow[] @relation("Followings")
}

model Post {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  desc        String?  @db.VarChar(255)
  img         String?
  imgHeight   Int?
  video       String?
  isSensitive Boolean  @default(false)

  // Relationships
  userId String
  user   User   @relation(fields: [userId], references: [id])

  rePostId Int?
  rePost   Post?  @relation("RePosts", fields: [rePostId], references: [id])
  rePosts  Post[] @relation("RePosts")

  parentPostId Int?
  parentPost   Post?  @relation("PostComments", fields: [parentPostId], references: [id])
  comments     Post[] @relation("PostComments")

  likes Like[]

  saves SavedPost[]
}

model Like{
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  userId  String
  user    User     @relation(fields: [userId], references: [id])
  postId  Int
  post    Post     @relation(fields: [postId], references: [id])
}

model SavedPost{
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  userId  String
  user    User     @relation(fields: [userId], references: [id])
  postId  Int
  post    Post     @relation(fields: [postId], references: [id])
}

model Follow{
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  followerId String
  followingId String

  follower    User     @relation("Followers",fields: [followerId],  references: [id])
  following   User     @relation("Followings",fields: [followingId], references: [id])
}